#%% I. LIB
import streamlit as st
from data import SQLRepository
import sqlite3
from pathlib import Path

#%% II. DATA

BASE_DIR = Path(__file__).resolve().parent.parent  # Access base dir in streamlit
database_name = str(list(BASE_DIR.glob('*.db'))[0])

connection = sqlite3.connect(
    database=database_name,
    check_same_thread=False
    )
repo = SQLRepository(connection)

#%% III. APP
st.set_page_config(
    layout="wide"
    )

st.markdown("""
# üîß PROMPT TOOL

""")

# Styled anchor that looks like a button
st.markdown(
    """
Th·∫ßy c√¥ c√≥ th·ªÉ c√πng tham gia ƒë√≥ng g√≥p kho ki·∫øn th·ª©c cho AI t·∫°i ƒë√¢y.
    
<a href="https://forms.gle/tJv8av3FkSRhSUyS9" target="_blank">
    <button style="padding:0.6rem 1rem; border-radius:8px; margin-bottom: 20px">
        ƒê√ìNG G√ìP NGAY ‚Üó
    </button>
</a>

ƒê·ªÉ s·ª≠ d·ª•ng tool, th·∫ßy c√¥ h√£y nh·∫≠p c√°c th√¥ng tin theo t·ª´ng b∆∞·ªõc b√™n d∆∞·ªõi.

--- 
    """,
    unsafe_allow_html=True
)


    #%%% 3.1 USER INPUT
col1, col2 = st.columns(2)
with col1:
        #%%%% 3.1.1 CONTEXT
    st.markdown("""
    ### I. B·ªêI C·∫¢NH
                """)
    subject = st.selectbox(
        "Ch·ªçn m√¥n h·ªçc", 
        repo.get_subject_list()
        )
    grade = st.selectbox(
        "Ch·ªçn l·ªõp", 
        repo.get_grade_list()
        )
    if int(grade) in range(1, 6):
        school = 'ti·ªÉu h·ªçc'
    elif int(grade) in range(6, 10):
        school = 'trung h·ªçc c∆° s·ªü'
    else:
        school = 'trung h·ªçc ph·ªï th√¥ng'
    
    author = st.selectbox(
        "Ch·ªçn b·ªô s√°ch",
        repo.get_author_list()
        )
    
    need_teaching_technique = st.checkbox(
        "T√¥i mu·ªën nh·∫≠p ph∆∞∆°ng ph√°p gi·∫£ng d·∫°y",
        key="teaching_technique"
        )
    if need_teaching_technique:
        teaching_technique = st.text_area(
            label="ƒêi·ªÅn ph∆∞∆°ng ph√°p gi·∫£ng d·∫°y"
            )
        
    need_more_context = st.checkbox(
        "T√¥i mu·ªën nh·∫≠p th√™m th√¥ng tin",
        key="more_input"
        )
    if need_more_context:
        additional_requirement = st.text_area(
            label="ƒêi·ªÅn th√™m th√¥ng tin t·∫°i ƒë√¢y"
            )
        
    st.markdown("""
    ---
                """) 
     
    #%%%% 3.1.2 OBJECTIVE
    st.markdown("""
    ### II. NHI·ªÜM V·ª§
                """)
        
    task = st.radio(
        "Th·∫ßy c√¥ mu·ªën y√™u c·∫ßu GenAI l√†m g√¨?", 
        [
            "T·∫°o k·∫ø ho·∫°ch b√†i d·∫°y", 
            "T·∫°o c√¢u h·ªèi luy·ªán t·∫≠p", 
            # "T·∫°o ƒë·ªÅ ki·ªÉm tra", 
            "Nhi·ªám v·ª• kh√°c"]
        )
    if task == "T·∫°o k·∫ø ho·∫°ch b√†i d·∫°y":
        khbd = st.selectbox(
            "Ch·ªçn khung KHBD",
            ["theo c√¥ng vƒÉn 2345/BGD", "theo c√¥ng vƒÉn 5512/BGD", "theo m·∫´u ri√™ng"]
            )
        if khbd == "theo m·∫´u ri√™ng":
            custom_khbd = st.text_area("Nh·∫≠p KHBD t·∫°i ƒë√¢y")
    
    elif task == "T·∫°o c√¢u h·ªèi luy·ªán t·∫≠p":
        item_type_list = st.multiselect(
            "L·ª±a ch·ªçn lo·∫°i c√¢u h·ªèi mu·ªën thi·∫øt k·∫ø",
            ["Tr·∫Øc nghi·ªám nhi·ªÅu l·ª±a ch·ªçn (MC)",
             "Tr·∫Øc nghi·ªám ƒë√∫ng/sai (TF)",
             "Tr·∫Øc nghi·ªám tr·∫£ l·ªùi ng·∫Øn (SA)"]
            )
        st.write("S·ªë l∆∞·ª£ng m·∫∑c ƒë·ªãnh l√† 2 c√¢u/lo·∫°i. C√°c c√¢u h·ªèi ƒë·ªÅu ·ªü m·ª©c M2. B·∫°n c√≥ th·ªÉ s·ª≠a l·∫°i s·ªë l∆∞·ª£ng v√† ƒë·ªô kh√≥ trong prompt k·∫øt qu·∫£.")
    
    elif task == "Nhi·ªám v·ª• kh√°c":
        custom_task = st.text_input("ƒêi·ªÅn nhi·ªám v·ª• c·ªßa GenAI t·∫°i ƒë√¢y")
    
    
    st.markdown("""
    ---
                """)   
                
    #%%%% 3.1.3 DATA
    st.markdown("""
    ### III. D·ªÆ LI·ªÜU
                 """)
     
    lesson_list = st.multiselect(
        "Ch·ªçn c√°c b√†i h·ªçc",
        repo.get_lesson_list(subject, grade, author)
        )
    
    try:
        if khbd != "theo m·∫´u ri√™ng":
            st.write(f"KHBD {khbd} s·∫Ω ƒë∆∞·ª£c nh·∫≠p t·ª± ƒë·ªông!")
    except:
        pass
    
    st.markdown("""
    ---
                """) 
     
     
    #%%%% 3.1.4 RESULT
    st.markdown("""
    ### IV. K·∫æT QU·∫¢
                """)
    have_example = st.checkbox("T√¥i c√≥ v√≠ d·ª•")
    if have_example:
        st.text_area("Nh·∫≠p v√≠ d·ª• t·∫°i ƒë√¢y")
        
    have_output_format = st.checkbox("T√¥i mu·ªën thi·∫øt l·∫≠p t·ª´ng b∆∞·ªõc cho AI")
    if have_output_format:
        st.text_area("Nh·∫≠p c√°c b∆∞·ªõc AI c·∫ßn th·ª±c hi·ªán t·∫°i")
        
        
with col2:

    #%%% 3.2 PROMPT OUTPUT
    st.markdown("""
    ### K·∫øt qu·∫£ Prompt
                """)
                
            #%%%% 3.2.1 CONTEXT OUTPUT
                
    result_prompt =  (
        "#B·ªêI C·∫¢NH" + 
        f"\nB·∫°n l√† gi√°o vi√™n {subject} {grade}. B·∫°n s·ª≠ d·ª•ng b·ªô s√°ch {author}. B·∫°n d·∫°y h·ªçc theo ch∆∞∆°ng tr√¨nh gi√°o d·ª•c ph·ªï th√¥ng 2018, ·ªü c·∫•p {school}."
        )
    
    if need_teaching_technique:
        result_prompt += f"B·∫°n ·ª©ng d·ª•ng ph∆∞∆°ng ph√°p {teaching_technique} trong c√¥ng vi·ªác."
        
    if need_more_context:
        result_prompt += f"b·∫°n c·∫ßn l∆∞u √Ω th√™m r·∫±ng {additional_requirement}"
    
  
            #%%%% 3.2.2 OBJECTIVE OUTPUT
    result_prompt +=  (
        "\n\n#NHI·ªÜM V·ª§" +
        f"\nNhi·ªám v·ª• c·ªßa b·∫°n l√† {task.lower()}. S·ª≠ d·ª•ng th√¥ng tin trong ph·∫ßn #D·ªÆ LI·ªÜU. K·∫øt qu·∫£ tr·∫£ ra c·∫ßn tu√¢n theo c√°c b∆∞·ªõc ƒë∆∞·ª£c ƒë·ªÅ c·∫≠p trong m·ª•c #K·∫æT QU·∫¢"
        )
    
    if task == "T·∫°o c√¢u h·ªèi luy·ªán t·∫≠p":
        result_prompt += (
            "\nB·∫°n s·∫Ω thi·∫øt k·∫ø c√°c d·∫°ng c√¢u h·ªèi sau:"
            )
        for item_type in item_type_list:
            result_prompt += f"\n* 2 c√¢u {item_type} ·ªü m·ª©c M2"
    
    
    
            #%%%% 3.2.3 DATA OUTPUT
    result_prompt +=  ("\n\n#D·ªÆ LI·ªÜU")
    
    try:
        for lesson in lesson_list:
            result_prompt += f"\n##KI·∫æN TH·ª®C {lesson}:\n {repo.get_knowledge(subject, grade, author, lesson)}"
        
    except:
        pass
    
    if task == "T·∫°o c√¢u h·ªèi luy·ªán t·∫≠p":
        result_prompt += (
            f"\n##H√åNH TH·ª®C C√ÅC LO·∫†I C√ÇU H·ªéI:\n{repo.get_item_info()}" + 
            f"\n##M·ª®C ƒê·ªò C√ÅC LO·∫†I C√ÇU H·ªéI:\n{repo.get_item_diff()}"
            )
    
    
    
            #%%%% 3.2.4 RESULT OUTPUT
    result_prompt +=  ("\n\n#K·∫æT QU·∫¢\nTh·ª±c hi·ªán theo #NHI·ªÜM V·ª§ ƒë√£ y√™u c·∫ßu.")
    
    try:
        if khbd == "theo c√¥ng vƒÉn 5512/BGD":
            result_prompt += f"\nTr·∫£ k·∫øt qu·∫£ theo m·∫´u sau:\n{repo.get_cong_van('5512/BGDƒêT-GDTrH', 'khung khbd')}"
        elif khbd == "theo c√¥ng vƒÉn 2345/BGD":
            result_prompt += f"\nTr·∫£ k·∫øt qu·∫£ theo m·∫´u sau:\n{repo.get_cong_van('2345/BGDƒêT-GDTH', 'khung khbd')}"
    except:
        pass
    
    st.text_area(
        label="Prompt:",
        value=result_prompt,
        height=(result_prompt.count("\n")+1)*25
        )
    
   


    